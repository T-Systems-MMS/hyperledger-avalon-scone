# Copyright 2020 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.5'


networks:
    avalon-network:
        external:
            name: avalon-network

services:
  avalon-shell:
    container_name: avalon-shell
    image: avalon-shell-dev
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - DISPLAY=${DISPLAY:-}
        - XAUTHORITY=~/.Xauthority
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DISPLAY
      - http_proxy
      - https_proxy
      - no_proxy
    volumes:
      # Below volume mappings are required for DISPLAY settings by heart disease GUI client
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
    command: |
      bash -c "tail -f /dev/null"
    stop_signal: SIGKILL
    depends_on:
      - avalon-listener
    networks:
      - avalon-network

  avalon-lmdb:
    container_name: avalon-lmdb
    image: avalon-lmdb-dev
    build:
      context: .
      dockerfile: ./shared_kv_storage/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    expose:
      # Port is where lmdb server will listen for http request.
      # Port should be same as in bind parameter or lmdb_config.toml
      - 9090
    command: |
      bash -c "
        kv_storage --bind http://avalon-lmdb:9090
        tail -f /dev/null
      "
    networks:
      - avalon-network

  avalon-listener:
    container_name: avalon-listener
    image: avalon-listener-dev
    build:
      context: .
      dockerfile: ./listener/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    expose:
      - 1947
      # ZMQ socket port.
      - 5555
    command: |
      bash -c "
        avalon_listener --bind http://avalon-listener:1947 --lmdb_url http://avalon-lmdb:9090
        tail -f /dev/null
        "
    depends_on:
      - avalon-lmdb
    networks:
      - avalon-network

  avalon-enclave-manager:
    container_name: avalon-enclave-manager
    image: avalon-enclave-manager-scone-dev
    build:
      context: .
      dockerfile: ./avalon-scone/worker_manager/Dockerfile-scone
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - ENCLAVE_TYPE=scone
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    expose:
      # ZMQ socket port to receive work orders from Avalon listener.
      - 5555
      # ZMQ socket port to communicate with scone python worker
      - 7777
    command: |
      bash -c "
        enclave_manager --lmdb_url http://avalon-lmdb:9090
        tail -f /dev/null
      "
    depends_on:
      - avalon-lmdb
    networks:
      - avalon-network

  scone-kme:
    container_name: scone-kme
    image: avalon-scone-kme-dev
    devices:
      - "/dev/isgx:/dev/isgx"
    expose:
      - 5000
# The argument 'scone-kme' in trusted_setup_script.sh should match the container alias as it is session name and also acts as DNS in CAS generated certs
# It should also be updated in scone_config.toml file if it is updated
    command: |
      bash -c "
         SCONE_MODE=HW SCONE_ALPINE=1 SCONE_VERSION=1 SCONE_HEAP=4G SCONE_ALLOW_DLOPEN=1 SCONE_CONFIG_ID=$KME_SESSION_NAME/certificate-generation python3
      "
#    command: |
#      bash -c "tail -f /dev/null"
    stop_signal: SIGKILL
    networks:
      - avalon-network

  scone-worker-1:
    container_name: scone-worker-1
    image: avalon-scone-worker-dev
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    devices:
      - "/dev/isgx:/dev/isgx"
    expose:
      # ZMQ socket port used to communicate with scone python worker.
      - 7777
    # Need to pass full path of file to python interpreter.
    # Pass ZMQ URL to listen for requests. Bind to all available interfaces.
    command: |
      bash -c "
         bash /entrypoint.sh scone-worker-1
      "
#    command: |
#      bash -c "
#        wo-processor --bind "tcp://*:7777"
#      "
#    command: |
#      bash -c "tail -f /dev/null"
    stop_signal: SIGKILL
    depends_on:
      - scone-kme
    networks:
      - avalon-network

  scone-worker-2:
    container_name: scone-worker-2
    image: avalon-scone-worker-dev
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    devices:
      - "/dev/isgx:/dev/isgx"
    expose:
      # ZMQ socket port used to communicate with scone python worker.
      - 7777
    # Need to pass full path of file to python interpreter.
    # Pass ZMQ URL to listen for requests. Bind to all available interfaces.
    command: |
      bash -c "
         bash /entrypoint.sh scone-worker-2
      "
#    command: |
#      bash -c "
#        wo-processor --bind "tcp://*:7777"
#      "
#    command: |
#      bash -c "tail -f /dev/null"
    stop_signal: SIGKILL
    depends_on:
      - scone-kme
    networks:
      - avalon-network
  
  scone-worker-3:
    container_name: scone-worker-3
    image: avalon-scone-worker-dev
    environment:
      - http_proxy
      - https_proxy
      - no_proxy
    devices:
      - "/dev/isgx:/dev/isgx"
    expose:
      # ZMQ socket port used to communicate with scone python worker.
      - 7777
    # Need to pass full path of file to python interpreter.
    # Pass ZMQ URL to listen for requests. Bind to all available interfaces.
    command: |
      bash -c "
         bash /entrypoint.sh scone-worker-3
      "
#    command: |
#      bash -c "
#        wo-processor --bind "tcp://*:7777"
#      "
#    command: |
#      bash -c "tail -f /dev/null"
    stop_signal: SIGKILL
    depends_on:
      - scone-kme
    networks:
      - avalon-network
  